App (Abs (V 1) (Var 1)) (Abs (V 1) (Var 1))
"(\\x1 -> x1) \\x1 -> x1"

Let Discard (Var 0) (Abs (V 1) (App (Var 1) (Abs (V 1) (Var 1))))
"let _ = x0 in \\x1 -> x1 \\x1 -> x1"

Abs (V 1) (Abs Discard (Abs (V 2) (App (Var 2) (Var 1))))
"\\x1 _ x2 -> x2 x1"

App (Var 2) (Abs (V 1) (Abs Discard (Var 1)))
"x2 \\x1 _ -> x1"



t5-t7
Pair (Var 0) (Var 1)
"(x0, x1)"

Fst (Pair (Var 0) (Var 1))
"fst (x0, x1)"

Snd (Pair (Var 0) (Var 1))
"snd (x0, x1)"



t8
Abs (V 0) (Abs (V 1) (Abs (V 2) (Abs (V 3) (Abs (V 4) (Var 5)))))
"\\x0 x1 x2 x3 x4 -> x5"

t9
Let (V 0) (Abs (V 1) (Abs (V 2) (Abs (V 3) (Abs (V 4) (Var 5))))) (Var 6)
"let x0 x1 x2 x3 x4 = x5 in x6"